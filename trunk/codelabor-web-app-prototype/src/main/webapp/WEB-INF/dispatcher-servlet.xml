<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:cache="http://www.springframework.org/schema/cache" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven validator="validator" />

	<mvc:default-servlet-handler default-servlet-name="${default.servlet.name}" />

	<context:component-scan base-package="org.codelabor" />

	<util:properties id="systemProperties" location="classpath:properties/system/system.properties" />
	<context:property-placeholder location="classpath:properties/**/*.properties" />

	<!-- Theme -->
	<bean id="themeSource" class="org.springframework.ui.context.support.ResourceBundleThemeSource">
		<property name="basenamePrefix" value="theme-" />
	</bean>
	<bean id="themeResolver" class="org.springframework.web.servlet.theme.CookieThemeResolver">
		<property name="defaultThemeName" value="${theme}" />
	</bean>

	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager" ref="contentNegotiationManager" />
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.XmlViewResolver">
					<property name="order" value="1" />
					<property name="location" value="/WEB-INF/views.xml" />
				</bean>

				<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/views/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<!-- JSON view -->
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
				<!-- XML view -->
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<constructor-arg>
						<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
							<property name="classesToBeBound">
								<list>
									<value>java.util.ArrayList</value>
									<value>java.util.LinkedList</value>
									<value>org.codelabor.example.emp.dto.EmpSearchConditionDto</value>
									<value>org.codelabor.example.emp.dto.EmpDto</value>
								</list>
							</property>
						</bean>
					</constructor-arg>
				</bean>
			</list>
		</property>
	</bean>

	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManager">
		<constructor-arg>
			<bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
				<constructor-arg>
					<map>
						<entry key="json" value="application/json" />
						<entry key="pdf" value="application/pdf" />
						<entry key="xml" value="application/xml" />
					</map>
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>

	<!-- view controller (example) -->
	<mvc:view-controller path="/example" view-name="example/index" />
	<mvc:view-controller path="/example/home" view-name="example/index" />
	<mvc:view-controller path="/example/encoding/get/request" view-name="example/encoding/get/request" />
	<mvc:view-controller path="/example/encoding/get/result" view-name="example/encoding/get/result" />
	<mvc:view-controller path="/example/error/dividedByZero" view-name="example/error/dividedByZero" />
	<mvc:view-controller path="/example/error/dividedByZeroErrorPageAttribute" view-name="example/error/dividedByZeroErrorPageAttribute" />
	<mvc:view-controller path="/example/jstl/fn" view-name="example/jstl/fn" />
	<mvc:view-controller path="/example/request" view-name="example/request/requestInfo" />
	<mvc:view-controller path="/example/info/buildInfo" view-name="example/info/buildInfo" />
	<mvc:view-controller path="/example/error/underConstruction" view-name="example/error/underConstruction" />

	<!-- view controller (system) -->
	<mvc:view-controller path="/system/info/buildInfo" view-name="system/info/buildInfo" />
	<mvc:view-controller path="/system/error/underConstruction" view-name="system/error/underConstruction" />

	<!-- exception resolver -->
	<bean class="org.codelabor.system.sniffer.web.servlet.resolver.SniffingHandlerExceptionResolver">
		<property name="order" value="1" />
	</bean>
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="order" value="2" />
		<property name="defaultErrorView" value="system/error/defaultErrorPage" />
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.security.access.AccessDeniedException">system/error/403</prop>
				<!-- does not work -->
				<!-- <prop key="javax.servlet.jsp.JspTagException">system/error/defaultErrorPage</prop> <prop key="javax.servlet.ServletException">system/error/defaultErrorPage</prop> -->
			</props>
		</property>
	</bean>

	<!-- locale resolver -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />

	<!-- multipart resolver -->
	<!-- 10MB = 1024 * 1024 * 10 = 10485760 Bytes -->
	<!-- 20MB = 1024 * 1024 * 20 = 20971520 Bytes -->
	<!-- 30MB = 1024 * 1024 * 30 = 31457280 Bytes -->
	<!-- 100MB = 1024 * 1024 * 100 = 104857600 Bytes -->

	<!-- servlet 2.5 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> <property name="maxUploadSize" value="20971520" 
		/> <property name="uploadTempDir" ref="uploadDirResource" /> </bean> <bean id="uploadDirResource" class="org.springframework.core.io.FileSystemResource"> <constructor-arg> 
		<value>${attachment.temp.dir}</value> </constructor-arg> </bean> -->

	<!-- servlet 3.0 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />

	<!-- interceptors -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="org.codelabor.system.sniffer.web.servlet.interceptor.SniffingHandlerInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
				<property name="paramName" value="language" />
			</bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean id="themeChangeInterceptor" class="org.springframework.web.servlet.theme.ThemeChangeInterceptor">
				<property name="paramName" value="theme" />
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>
